{
    "id": 36,
    "description": "Take as input a list of dictionaries, return a dictionary with keys, keys common to all dictionaries, and values, values common to all keys",
    "text": "\n    Implement the function es36(dictionariesList) that takes as an\n    input a list of dictionaries and returns a dictionary.\n\n    The input dictionaries in the dictionariesList have character\n    strings between 'a' and 'z' as key and lists of integers as\n    attributes.\n\n    The keys in the output dictionary are the keys common to all the\n    dictionaries in dictionariesList.  Each x key of the output\n    dictionary is associated with a list of integers.  An integer is\n    present in the list of a key x if and only if it is present in the\n    attribute list of key x for all the dictionaries of\n    dictionariesList.  The list is also sorted in ascending order.\n\n    For example:\n    - if the dictionariesList contains the three dictionaries\n    {'a': [1,3,5],'b':[2,3 ],'d':[3]},\n    {'a':[5,1,2,3], 'b':[2],'d':[3]},\n    {'a':[3,5], 'c':[4,1,2],'d':[4]}\n    - the returned dictionary is\n    {'a':[3,5],'d':[]}\n\n    ",
    "algorithm": "take the set of all the keys of the first dictionary in the list\nfor all other dictionaries:\n\t make the intersection with the set of keys\n initialize a dictionary with keys, the keys left in the set, and values, the values of the first dictionary\nfor all other dictionaries:\n\tfor each pair key - value:\n\t\tif the key is in the created dictionary:\n\t\t\t update the dictionary created with the intersection of the two values\nreturn the dictionary with the ordered values",
    "tags": ["Dictionaries", "Sorting"],
    "effort": 3,
    "clues": [],
    "from": "recuper-16-3-18"
}
