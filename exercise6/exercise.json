{
    "id": 48,
    "description": "Given a tree of type AlberoBinario, it returns the number of nodes that have exactly 2 children.",
    "text": "Design a function ex48(tree) such that:\n    - it is recursive or uses recursive functions(s)/method(s),\n    - it receives as arguments a tree that consist of nodes of type\n      BinaryTree, defined in the attached tree.py library\n    - it returns the number of nodes of the tree having EXACTLY two\n      children\n    Example: if the tree is\n\n             7\n            /\\n           1  3\n          / \\n        4    6\n       /    /\n      5    2\n     /     \\n    9       8\n\n    the function will return the value 2, since there are only two\n    nodes with exactly two children, namely the nodes with value 7 and\n    1.\n",
    "algorithm": "If the node is None: \n\t returns 0 \n declares a count variable = the function called on the left child + the function called on the right child \n if the node has left child and right child: \n\t increases count by 1 \n returns count",
    "tags": ["Trees", "Recursion"],
    "effort": 2,
    "clues": [],
    "from": "recupero-19-9-18"
}
