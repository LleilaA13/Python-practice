{
    "id": 7, 
    "description": "Takes a tree, a set of characters and an integer as inputs, and returns the number of tree nodes having exactly the integer number of child nodes present in the input set", 
    "text": "\n    Design and implement  the recursive function es7(tree, id_set, k) (or that uses\n    recursive function(s) or method(s)) that:\n    - takes as arguments:\n      - a tree 'tree' formed by nodes of the type Node defined in\n        the library treenode.py,\n      - a set 'id_set' of integers\n      - an integer 'k'\n    - returns the number of tree nodes having\n      EXACTLY k children who have identifiers in the id_set.\n    \n    Example: let k=2 and id_set={1,2,3,5,9}, so function es7\n    - returns 2 on the left tree (for children of nodes 4 and 2)\n    - returns 3 for the right tree (for the children of nodes 7, 9 and 10).\n\n              5                                     7              \n      ________|_____________                _______|______         \n     |          |           |              |              |        \n     20         4           6              5              9        \n     |     _____|______                 ___|___        ___|__      \n     11   |   |  |  |  |               |       |      |      |     \n          10  2  9  8  7               10      8      3      1     \n            __|__                     _|_     _|_    _|_    _|_    \n           |     |                   |   |   |   |  |   |  |   |   \n           3     1                   1   2   12  13 15  6  4   0\n    ", 
    "algorithm": "I add to es7 function the count=0 variable, \nif the node has no children: return count\notherwise I initialize a variable to 0\n\tfor each child in set increase the variable\nif at the end of the recursion the variable is equal to k: return count increased by 1\notherwise: return count", 
    "tags": ["Trees", "Recursion"], 
    "effort": 3,
    "clues": [],
    "from":"exam-8-1-19"
}
